//- 이 파일은 index를 제외한 모든 페이지에서 호출 되므로 따로 
//- 본 파일에 명시된 mixin 은 따로 호출 안하시고 그냥 쓰시면 됩니다.
//- 현재 mixin 목록 - (게시판 쓰기 mixin, 게시판 목록 mixin, 아이콘 mixin)

//- -----------------------------------------------------------------------------------------------------------------
//- ------------------------------------------- 아이콘 관련 mixin ---------------------------------------------------
//- -----------------------------------------------------------------------------------------------------------------
//- Icons
//- 사용법: 1. div 하나를 생성하여(중요) '그 안에' icon mixin 을 호출하고,
//-         2. icon mixin에 원하는 아이콘의 이름과, title (img 태그의 alt 같은 역할), 원하는 색상을 인자로 전달하고,
//-             ex) +icon('close', '닫기', '#f5f5f5')
//-         3. css 에서 title을 지정하고
//-         4. 크기가 맘에 안든다면 css에서 div의 크기를 조정하고
//-         5. 아이콘 두께를 조정하려면 css에서 stroke-width 를 조절하시면 됩니다.
mixin icon(iconName, title, color)
  - const toggle = { close: "close" }
  - const chevron = { chevronForward: "chevronForward", chevronBackward: "chevronBackward", chevronDown: "chevronDown" }
  - const caret = { caretDown: "caretDown" }
  case iconName
    when toggle.close
      svg(xmlns='http://www.w3.org/2000/svg' viewBox='105 105 300 300')
        title= title
        path(fill='none' stroke= color stroke-linecap='round' stroke-linejoin='round' stroke-width='40' d='M368 368L144 144M368 144L144 368')
    when chevron.chevronForward
      svg(xmlns='http://www.w3.org/2000/svg' viewBox='105 105 300 300')
        title= title
        path(fill='none' stroke= color stroke-linecap='round' stroke-linejoin='round' stroke-width='32' d='M184 112l144 144-144 144')
    when chevron.chevronBackward
      svg(xmlns='http://www.w3.org/2000/svg' viewBox='105 105 300 300')
        title= title
        path(fill='none' stroke= color stroke-linecap='round' stroke-linejoin='round' stroke-width='32' d='M328 112L184 256l144 144')
    when chevron.chevronDown
      svg(xmlns='http://www.w3.org/2000/svg' viewBox='105 105 300 300')
        title= title
        path(fill='none' stroke= color stroke-linecap='round' stroke-linejoin='round' stroke-width='32' d='M112 184l144 144 144-144')
    when caret.caretDown
      svg(xmlns='http://www.w3.org/2000/svg' viewBox='91 91 330 330')
        title= title
        path(fill= color d='M98 190.06l139.78 163.12a24 24 0 0036.44 0L414 190.06c13.34-15.57 2.28-39.62-18.22-39.62h-279.6c-20.5 0-31.56 24.05-18.18 39.62z')
    default
      p(style="color:red;") icon mixin에 존재하지 않는 인자 #{currentIcon}이(가) 전달되었습니다.
      
//- sub-main 템플릿의 icon 관련 mixin
mixin sub-contents__item__icon()
  div.sub-contents__item__icon
    +icon("chevronForward", '', '#0f0f0f')

//- -----------------------------------------------------------------------------------------------------------------
//- ------------------------------------------- 게시판 관련 mixin ---------------------------------------------------
//- -----------------------------------------------------------------------------------------------------------------
//- Bulletn Board Post Write Template [ 게시판 글 작성 템플릿 ]
mixin postWrite()
  .sub-contents__content-wrap
    .sub-contents__content
      h2.sub-contents__form-title board Form
      form(action="/footprint/acquisition/post" method="post" enctype="multipart/form-data").sub-contents__form
        .sub-contents__input-wrap.sub-contents__title-wrap
          h3.sub-contents__text-title.sub-contents__input-title 제목
          input(type="text" name="title" size="54" required)
        .sub-contents__input-wrap.sub-contents__file-wrap
          h3.sub-contents__file-title.sub-contents__input-title 파일
          input(type="file" name="file")
        .sub-contents__input-wrap.sub-contents__paragraph-wrap
          h3.sub-contents__paragraph-title.sub-contents__input-title 내용
          textarea(rows="5" cols="50" name="paragraph" required)
        input(type="submit" name="submit").sub-contents__submit

//- Bulletn Board Post List Template [ 게시판 글 목록 템플릿 ]
//- 💥 게시판 글 목록 템플릿은 '빈페이지로 진입하고 프론트에서 API 요청을해서 응답받고 페이지를 채우는 방법' 으로 설계되었습니다.
//- 즉, 서버사이드에서 게시글 목록의 빈 템플릿만 제공하고, 데이터는 클라이언트 사이드에서 API로 요청됩니다.
//- 게시글 목록 요청 모듈은 src/es6/common/function/post 에서 확인하실 수 있습니다.
mixin postList(usePostWrite = false)
  article.post-list
    |
    |
    // 게시판 글 목록 헤더
    section.post-list__header
      //- 표시될 게시글의 속성 = ['number', 'title', 'writer', 'hit', 'reg-time'];
      div.post-list__header__prop.post-list__header__number 번호
      div.post-list__header__prop.post-list__header__title 제목
      div.post-list__header__prop.post-list__header__writer 작성자
      div.post-list__header__prop.post-list__header__hit 조회수
      div.post-list__header__prop.post-list__header__reg-time 등록일
    |
    |
    // 게시판 글 목록
    section.post-list__posts
    |
    |
    // 게시판 글 목록 버튼들
    section.post-list__btns
      // 페이지네이션
      section.post-list__inner-paging
          // 페이지 번호 리스트
          ul.post-list__page-numbers
          // 버튼들
          div.post-list__page-btn.post-list__page-btn--left
            +icon("chevronBackward", '이전 페이지', '#0f0f0f')
          div.post-list__page-btn.post-list__page-btn--right
            +icon("chevronForward", '다음 페이지', '#0f0f0f')
      //- 글쓰기 기능이 존재하는 게시판이라면
      - if(usePostWrite)
        // 글쓰기 버튼
        section.post-list__write-btn 글쓰기
      // TODO: 제일 앞으로 가기, 제일 뒤로 가기 부분 구현

//- Bulletn Board Post View Template [ 게시판 글 상세보기 템플릿 ]
//- 💥 게시판 글 상세보기 템플릿은 'url 에 존재하는 id 값으로 백엔드에서 정보를 찾아서 템플릿 엔진에 전달해주는 방법' 으로 설계되었습니다.
//- 즉, 서버 사이드에서 해당하는 페이지의 데이터 렌더링이 모두 끝난 후 제공됩니다. 
mixin postView()
  article.post-view
    |
    |
    // 게시판 글 헤더
    section.post-view__header
      //- 헤더에 표시될 게시글의 속성 = ['title', 'reg-time', 'writer', 'hit'];
      div.post-view__header__prop.post-view__header__title 제목
      div.post-view__header__prop.post-view__header__reg-time 등록일
      div.post-view__header__prop.post-view__header__writer 작성자
      div.post-view__header__prop.post-view__header__hit 조회수
    // 첨부 파일
    section.post-view__file
    // 게시판 글
    section.post-view__content
    // 게시판 글 푸터
    section.post-view__footer
    // 이전 글
    section.post-view__next
    // 다음 글
    section.post-view__prev